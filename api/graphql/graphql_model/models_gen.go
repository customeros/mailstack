// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graphql_model

import (
	"time"

	"github.com/customeros/mailstack/internal/enum"
)

type Attachment struct {
	ID          string `json:"id"`
	MessageID   string `json:"messageId"`
	Filename    string `json:"filename"`
	ContentType string `json:"contentType"`
	URL         string `json:"url"`
}

type EmailMessage struct {
	ID              string              `json:"id"`
	ThreadID        string              `json:"threadId"`
	MailboxID       string              `json:"mailboxId"`
	Direction       enum.EmailDirection `json:"direction"`
	From            string              `json:"from"`
	To              []string            `json:"to"`
	Cc              []string            `json:"cc,omitempty"`
	Bcc             []string            `json:"bcc,omitempty"`
	Subject         string              `json:"subject"`
	Body            string              `json:"body"`
	AttachmentCount int                 `json:"attachmentCount"`
	ReceivedAt      time.Time           `json:"receivedAt"`
}

type EmailThread struct {
	ID               string     `json:"id"`
	UserID           string     `json:"userId"`
	MailboxID        string     `json:"mailboxId"`
	Subject          string     `json:"subject"`
	Summary          string     `json:"summary"`
	IsViewed         bool       `json:"isViewed"`
	IsDone           bool       `json:"isDone"`
	LastSender       string     `json:"lastSender"`
	LastSenderDomain string     `json:"lastSenderDomain"`
	LastMessageAt    *time.Time `json:"lastMessageAt,omitempty"`
}

type Query struct {
}

type ThreadMetadata struct {
	ID             string        `json:"id"`
	Summary        string        `json:"summary"`
	Participants   []string      `json:"participants"`
	HasAttachments bool          `json:"hasAttachments"`
	Attachments    []*Attachment `json:"attachments,omitempty"`
}
