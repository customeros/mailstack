package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.68

import (
	"context"
	"time"

	"github.com/customeros/mailstack/api/graphql/graphql_model"
	"github.com/customeros/mailstack/internal/enum"
)

// GetEmailsByThread is the resolver for the getEmailsByThread field.
func (r *queryResolver) GetEmailsByThread(ctx context.Context, threadID string) ([]*graphql_model.EmailMessage, error) {
	// Stub implementation that returns mock data
	mockMessages := []*graphql_model.EmailMessage{
		{
			ID:              "msg-1",
			ThreadID:        threadID,
			MailboxID:       "mbx-123",
			Direction:       enum.EmailDirectionInbound,
			From:            "sender@example.com",
			To:              []string{"recipient@yourdomain.com"},
			Cc:              []string{},
			Bcc:             []string{},
			Subject:         "Test Email 1",
			Body:            "This is a test email body",
			AttachmentCount: 0,
			ReceivedAt:      time.Now(),
		},
		{
			ID:              "msg-2",
			ThreadID:        threadID,
			MailboxID:       "mbx-123",
			Direction:       enum.EmailDirectionOutbound,
			From:            "recipient@yourdomain.com",
			To:              []string{"sender@example.com"},
			Cc:              []string{},
			Bcc:             []string{},
			Subject:         "Re: Test Email 1",
			Body:            "This is a reply to the test email",
			AttachmentCount: 0,
			ReceivedAt:      time.Now().Add(1 * time.Hour),
		},
	}

	return mockMessages, nil
}

// GetThreadMetadata is the resolver for the getThreadMetadata field.
func (r *queryResolver) GetThreadMetadata(ctx context.Context, threadID string) (*graphql_model.ThreadMetadata, error) {
	mockMetadata := &graphql_model.ThreadMetadata{
		ID:             threadID,
		Summary:        "This is a test email thread about testing",
		Participants:   []string{"sender@example.com", "recipient@yourdomain.com"},
		HasAttachments: false,
		Attachments:    []*graphql_model.Attachment{},
	}

	return mockMetadata, nil
}
